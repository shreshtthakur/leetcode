int solve(vector<int>&cost,int n){
        if(n<=1) return cost[n];
        return min(solve(cost,n-1),solve(cost,n-2))+cost[n];
    }
    int minCostClimbingStairs(vector<int>& cost) {
        int n=cost.size();
        return min(solve(cost,n-1),solve(cost,n-2));
    }
     int minCostClimbingStairs(vector<int>& cost) {
        int n=cost.size();
        vector<int> dp(n+1);
        dp[0]=cost[0];
        dp[1]=cost[1];
        for(int i=2;i<cost.size();i++){
            dp[i]=min(dp[i-1],dp[i-2])+cost[i];
        }
        return min(dp[n-1],dp[n-2]);
    }
